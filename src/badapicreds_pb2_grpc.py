# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import badapicreds_pb2 as badapicreds__pb2


class CredentialServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListEmailCredentials = channel.unary_stream(
        '/blueintel.badapi.badapicreds.CredentialService/ListEmailCredentials',
        request_serializer=badapicreds__pb2.ListEmailCredentialRequest.SerializeToString,
        response_deserializer=badapicreds__pb2.EmailCredential.FromString,
        )
    self.BatchListEmailCredentials = channel.unary_stream(
        '/blueintel.badapi.badapicreds.CredentialService/BatchListEmailCredentials',
        request_serializer=badapicreds__pb2.BatchEmailCredentialRequest.SerializeToString,
        response_deserializer=badapicreds__pb2.EmailCredential.FromString,
        )


class CredentialServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListEmailCredentials(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchListEmailCredentials(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CredentialServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListEmailCredentials': grpc.unary_stream_rpc_method_handler(
          servicer.ListEmailCredentials,
          request_deserializer=badapicreds__pb2.ListEmailCredentialRequest.FromString,
          response_serializer=badapicreds__pb2.EmailCredential.SerializeToString,
      ),
      'BatchListEmailCredentials': grpc.unary_stream_rpc_method_handler(
          servicer.BatchListEmailCredentials,
          request_deserializer=badapicreds__pb2.BatchEmailCredentialRequest.FromString,
          response_serializer=badapicreds__pb2.EmailCredential.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'blueintel.badapi.badapicreds.CredentialService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CredentialSearchServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListCredentials = channel.unary_stream(
        '/blueintel.badapi.badapicreds.CredentialSearchService/ListCredentials',
        request_serializer=badapicreds__pb2.SearchTerm.SerializeToString,
        response_deserializer=badapicreds__pb2.Credential.FromString,
        )


class CredentialSearchServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListCredentials(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CredentialSearchServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListCredentials': grpc.unary_stream_rpc_method_handler(
          servicer.ListCredentials,
          request_deserializer=badapicreds__pb2.SearchTerm.FromString,
          response_serializer=badapicreds__pb2.Credential.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'blueintel.badapi.badapicreds.CredentialSearchService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class UASSearchServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListUASCredentials = channel.unary_stream(
        '/blueintel.badapi.badapicreds.UASSearchService/ListUASCredentials',
        request_serializer=badapicreds__pb2.UASSearchTerm.SerializeToString,
        response_deserializer=badapicreds__pb2.UASCredential.FromString,
        )


class UASSearchServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListUASCredentials(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UASSearchServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListUASCredentials': grpc.unary_stream_rpc_method_handler(
          servicer.ListUASCredentials,
          request_deserializer=badapicreds__pb2.UASSearchTerm.FromString,
          response_serializer=badapicreds__pb2.UASCredential.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'blueintel.badapi.badapicreds.UASSearchService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class S3SearchServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListS3Files = channel.unary_stream(
        '/blueintel.badapi.badapicreds.S3SearchService/ListS3Files',
        request_serializer=badapicreds__pb2.S3SearchTerm.SerializeToString,
        response_deserializer=badapicreds__pb2.S3File.FromString,
        )


class S3SearchServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListS3Files(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_S3SearchServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListS3Files': grpc.unary_stream_rpc_method_handler(
          servicer.ListS3Files,
          request_deserializer=badapicreds__pb2.S3SearchTerm.FromString,
          response_serializer=badapicreds__pb2.S3File.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'blueintel.badapi.badapicreds.S3SearchService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
